import wollok.game.*
import tank.*
import enemigos.*
import balas.*
import paredes.*
import extras.*
import mapas.*

describe "Tanque" {

	method initialize() {
		game.clear()
		game.addVisual(tanque)
	}

	test "Tanque con cuatro vidas, recibe daño tres veces y queda con 1 vida" {
		tanque.recibirDanio()
		tanque.recibirDanio()
		tanque.recibirDanio()
		assert.equals(1, tanque.vidasRestantes())
	}

	test "Tanque con cuatro vidas desaparece del tablero" {
		tanque.recibirDanio()
		tanque.recibirDanio()
		tanque.recibirDanio()
		tanque.recibirDanio()
		assert.notThat(game.hasVisual(tanque))
	}

}

describe "Enemigos" {

	method initialize() {
		game.clear()
	}

	test "Tanque enemigo común con cuatro vidas, recibe dos impactos y desaparece del mapa" {
		const enemigo = new Tanque()
		assert.equals(4, enemigo.vidasRestantes())
		enemigo.recibirDanio()
		enemigo.recibirDanio()
		enemigo.recibirDanio()
		assert.notThat(game.hasVisual(enemigo))
	}

	test "Tanque enemigo pesado con siete vidas, recibe seis impactos y desaparece del mapa" {
		const enemigo = new TanquePesado()
		assert.equals(7, enemigo.vidasRestantes())
		enemigo.recibirDanio()
		enemigo.recibirDanio()
		enemigo.recibirDanio()
		enemigo.recibirDanio()
		enemigo.recibirDanio()
		enemigo.recibirDanio()
		assert.notThat(game.hasVisual(enemigo))
	}

}

describe "Paredes" {

	method initialize() {
		game.clear()
	}

	test "Pared de ladrillo desaparece luego de dos impactos" {
		const paredDeLadrillo = new ParedDeLadrillo()
		paredDeLadrillo.recibirDanio()
		paredDeLadrillo.recibirDanio()
		assert.notThat(game.hasVisual(paredDeLadrillo))
	}

}

describe "Civil" {

	method initialize() {
		game.clear()
	}

	test "Civil desaparece del juego luego de un impacto" {
		const civil = new Civil()
		civil.recibirDanio()
		assert.notThat(game.hasVisual(civil))
	}

}

